//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

global class FacebookRegistration implements Auth.RegistrationHandler{

public YoubioIDs__c youbio{get;set;}

global User createUser(Id portalId, Auth.UserData data){
    youbio = YoubioIDs__c.getInstance('Youbio');
    User u;
    Account a = [SELECT Id FROM account WHERE name='Youbio Idea Tank'];
    Contact c;
    List<Contact> contacts = [SELECT id, accountId from contact where email = :data.email];
    if(contacts.size() >0) {
        if(contacts[0].accountId == null)
                c.accountId = a.Id;
        c = contacts[0];        
    } else {        
        c = new Contact();
        c.accountId = a.Id;
        c.email = data.email;
        c.firstName = data.firstName;
        c.lastName = data.lastName;
        c.RecordTypeId = youbio.YoubioContactRecordType__c;        
        insert c;
    }
    List<Profile> ps = [SELECT Id FROM profile WHERE name='Youbio Portal User'];    
    List<User> users = [SELECT Id from User WHERE email = :data.email AND profileId =: ps[0].id];
    if(users.size() > 0 ) {
        u = users[0];
        System.debug('****Wen create user update'+u.id);        
        u.IWLAvatarId__c = 'http://graph.facebook.com/'+data.identifier+'/picture?type=normal'; 
        update(u);       
    }else {        
        u = new User();  
        u.contactId= c.Id;         
        u.username = 'Youbio'+data.email;
        u.email = data.email;
        u.lastName = data.lastName;
        u.firstName = data.firstName;
        u.IWLAvatarId__c = 'http://graph.facebook.com/'+data.identifier+'/picture?type=normal';    
        String alias = data.username;
        u.CommunityNickname = alias;    
        //Alias must be 8 characters or less
        if(alias.length() > 8) {
            alias = alias.substring(0, 8);
        }
        u.alias = alias;
        u.languagelocalekey = 'da';
        u.localesidkey = 'da';       
        u.profileId = ps[0].id;//00eD00000015fgq
        u.TimeZoneSidKey = 'Europe/Paris';
        u.LocaleSidKey ='da_DK';
        u.EmailEncodingKey ='ISO-8859-1';
        System.debug('*****'+u);
        //insert u;
        System.debug('****User Inserted****');
    }    
    return u;
}

global void updateUser(Id userId, Id portalId, Auth.UserData data){
    List<Profile> ps = [SELECT Id FROM profile WHERE name='Youbio Portal User'];
    if(portalId != ps[0].id) 
        createUser(ps[0].id, data);
    else {  
        User u = new User(id=userId);
        System.debug('Wen userid'+userId);
        u.email = data.email;
        u.username = 'Youbio'+data.email;
        String alias = data.username;
        system.debug('***Nick'+ alias + '!!!!!'+ u.CommunityNickname);
        u.CommunityNickname = alias;     
        if(alias.length() > 8) {
            alias = alias.substring(0, 8);
        }
        u.alias = alias;
     
        update(u);
    }
}

@isTest(SeeAllData=true)
static void testCreateUser() {

    FacebookRegistration  handler = new FacebookRegistration();
    Auth.UserData sampleData = new Auth.UserData('testId', 'testFirst', 'testLast',
        'testFirst testLast', 'testuser@example.org', null, 'testuserlong', 'en_US', 'facebook',
        null, new Map<String, String>{});
    User u = handler.createUser(null, sampleData);
    //System.assertEquals('testuserlong@salesforce.com', u.userName);
    System.assertEquals('testuser@example.org', u.email);
    System.assertEquals('testLast', u.lastName);
    System.assertEquals('testFirst', u.firstName);
    System.assertEquals('testuser', u.alias);
    insert(u);
    String uid = u.id;
    
    sampleData = new Auth.UserData('testNewId', 'testNewFirst', 'testNewLast',
        'testNewFirst testNewLast', 'testnewuser@example.org', null, 'testnewuserlong', 'en_US', 'facebook',
        null, new Map<String, String>{});
    handler.updateUser(uid, null, sampleData);
    
    User updatedUser = [SELECT userName, email, firstName, lastName, alias FROM user WHERE id=:uid];
    //System.assertEquals('testnewuserlong@salesforce.com', updatedUser.userName);
    System.assertEquals('testuser@example.org', updatedUser.email);
    System.assertEquals('testLast', updatedUser.lastName);
    System.assertEquals('testFirst', updatedUser.firstName);
    //System.assertEquals('testnewu', updatedUser.alias);


}
}