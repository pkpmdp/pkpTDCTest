<apex:page controller="CTICallRegistrationController" sidebar="false" showHeader="false" title="CTI Call Registration" cache="false" action="{!createEmptyCallReg}">
  <style type="text/css">
    .theGridCols1 {width:16%;}
    .theGridCols2 {width:16%;}
    .theGridCols3 {width:32%;}
    .theGridCols4 {width:32%;}
  </style>
  <script type="text/javascript">
    var __sfdcSessionId = '{!GETSESSIONID()}';
    
    var popupCookie = 'CTI_CallRegPopup';
  
      function CTI_setCookie(name,value,days) {
        var expires = "";
        if (days) {
          var date = new Date();
          date.setTime(date.getTime()+(days*24*60*60*1000));
          expires = "; expires="+date.toGMTString();
        }
        document.cookie = name+"="+value+expires+"; path=/";
      }
    
      function CTI_getCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for(var i=0;i < ca.length;i++) {
          var c = ca[i];
          while (c.charAt(0)==' ') {
            c = c.substring(1,c.length);
          }
          if (c.indexOf(nameEQ) == 0) {
            return c.substring(nameEQ.length,c.length);
          }
        }
        return null;
      }
    
      function CTI_deleteCookie(name) {
        CTI_setCookie(name,"",-1);
      }
      
      function CTI_onClosePopup(callCTI){
        if (!window.opener){
            window.open('','_self','');
        }        
        window.close();
      }      
      
      if (CTI_getCookie(popupCookie + '{!CTI.ContextId__c}') == '{!CTI.ContextId__c}'){
        CTI_onClosePopup();
      } else {
        CTI_setCookie(popupCookie + '{!CTI.ContextId__c}', '{!CTI.ContextId__c}', 1);
      }    
  </script>
  <script src="../../soap/ajax/16.0/connection.js" type="text/javascript"></script>
  <script src="../../soap/ajax/16.0/apex.js" type="text/javascript"></script>  
  <script type="text/javascript">
    var cancelCallRegistration = true;
    
    function apexCancelCallRegistration(){
        if (cancelCallRegistration){
          sforce.apex.execute('CTICallRegistrationWebServices', 'cancelCallReg', {Id:'{!CTI.ContextId__c}'}); 
        }
      } 
      
      var previousBeforeUnload = window.onbeforeunload;
      window.onbeforeunload = function() {
        if (previousBeforeUnload ) {
          previousBeforeUnload ();          
        }
        apexCancelCallRegistration();
        CTI_deleteCookie(popupCookie + '{!CTI.ContextId__c}');
        return ;
      }
      
      function onAccountClicked(elem){
        if (elem.href){
          eval(unescape(elem.href));
        }
      }
  </script>
  <apex:sectionHeader title="CTI Call registration" subtitle="Taxonomy"/>
  <apex:form id="frm">
    <apex:pageMessages />
    <div style="display:none;"><apex:inputField value="{!CTI.TaksonomySet__c}" required="true" id="id_taksonomyset" /></div>
    <apex:pageBlock title="Taxonomy" id="id_taksonomy" rendered="{!requiredParams}">
      <apex:pageBlockSection id="id_taxonomysection" collapsible="false" title="Taxonomy set - {!CTI.TaksonomySet__c}" columns="1">
       <apex:panelGrid columns="4" width="100%" cellpadding="5" cellspacing="0" style="table-layout:fixed;" columnClasses="theGridCols1,theGridCols2,theGridCols3,theGridCols4">
        <apex:panelGroup layout="block">
          <apex:outputLabel value="{!$ObjectType.CTI_CallRegistration__c.fields.Henvendelsetype__c.label}" for="id_henvendelsetype" id="id_henvendelsetype_label" style="font-weight:bold" />                  
          <apex:inputField value="{!CTI.Henvendelsetype__c}" id="id_henvendelsetype" onchange="onChangeHenvendelsetype()" required="true" style="width:100%;display:none" />
        </apex:panelGroup>
        <apex:panelGroup layout="block">
          <apex:outputLabel value="{!$ObjectType.CTI_CallRegistration__c.fields.Udstyr__c.label}" for="id_udstyr" id="id_udstyr_label" style="display:none; font-weight:bold" />
          <apex:inputField value="{!CTI.Udstyr__c}" id="id_udstyr" required="false" style="width:100%;display:none" /><br/><br/>
          <apex:outputLabel value="{!$ObjectType.CTI_CallRegistration__c.fields.Kundeforhold__c.label}" for="id_kundeforhold" id="id_kundeforhold_label" style="display:none; font-weight:bold;" />
          <apex:inputField value="{!CTI.Kundeforhold__c}" id="id_kundeforhold" required="false" style="width:100%;display:none" />
        </apex:panelGroup>
        <apex:panelGroup layout="block">
          <apex:outputLabel value="{!$ObjectType.CTI_CallRegistration__c.fields.Henvendelse__c.label}" for="id_henvendelse" id="id_henvendelse_label" style="font-weight:bold" />
          <apex:inputField value="{!CTI.Henvendelse__c}" id="id_henvendelse" onchange="onChangeHenvendelse()" required="true" style="width:100%;display:none" />
        </apex:panelGroup>
        <apex:panelGroup layout="block">
          <apex:outputLabel value="{!$ObjectType.CTI_CallRegistration__c.fields.Losning__c.label}" for="id_losning" id="id_losning_label" style="font-weight:bold" />
          <apex:inputField value="{!CTI.Losning__c}" id="id_losning" required="true" style="width:100%;display:none" />
        </apex:panelGroup>       
      </apex:panelGrid>
      </apex:pageBlockSection>
      <apex:pageBlockSection id="id_general" collapsible="false" title="General" columns="1">
       <apex:panelGroup layout="block">
        <apex:outputLabel value="{!$Label.Customer}" for="account" id="account_label" style="font-weight:bold" /><br/>                  
        <apex:inputField id="id_accuont" value="{!CTI.Account__c}" onclick="onAccountClicked(this); return false;" />
        <apex:commandButton onclick="clearAccount();return false;" value="{!$Label.Clear_Customer}" id="clear" />
       </apex:panelGroup>
       <apex:panelGroup layout="block"> 
        <apex:outputLabel value="{!$ObjectType.CTI_CallRegistration__c.fields.Comment__c.label}" for="comment" id="comment_label" style="font-weight:bold" />                  
        <apex:inputField value="{!CTI.Comment__c}" id="id_comment" required="true" style="width:100%"/>
       </apex:panelGroup>
      </apex:pageBlockSection>
      <apex:pageBlockButtons id="id_commandButtons">
        <div style="display:none">
        <apex:actionStatus id="id_saveCallRegistration">
          <apex:facet name="stop">{!DbSaveSucceeded}</apex:facet>
        </apex:actionStatus>
        </div>
        <apex:commandButton action="{!saveCallRegistration}" oncomplete="onCTICompleted(1);" status="id_saveCallRegistration" value="{!$Label.Save}" id="save" reRender="frm" />
        <apex:commandButton action="{!cancelCallRegistration}" oncomplete="onCTICompleted(0);" status="id_saveCallRegistration" value="{!$Label.Cancel}" id="cancel" immediate="true" reRender="frm"/>
      </apex:pageBlockButtons>
    </apex:pageBlock>  
  <script type="text/javascript" id="id_picklists">      
    var previousOnload = window.onload;        
    window.onload = function() {
        if (previousOnload) {
            previousOnload();
        }
        var firstDropdown = document.getElementById('{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelsetype}');
        firstDropdown.focus();
        window.focus();
    }    

    dsoResult = sforce.connection.describeSObject("CTI_CallRegistration__c");
    
    populateDependentPicklist('CTI_CallRegistration__c', '{!$Component.frm.id_taksonomyset}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelsetype}', 'TaksonomySet__c', 'Henvendelsetype__c');
    onChangeHenvendelsetype();
        
    function populateDependentPicklist(objectName, ctrlName, depName, ctrlfieldname, depfieldname) {
      var fields = dsoResult.fields;
      for (i = 0; i < fields.length; i++) {
        var fieldFromDescribe = fields[i];
        if (fieldFromDescribe.name == ctrlfieldname) {
          ctrlfield = fieldFromDescribe;    
        } else if (fieldFromDescribe.name == depfieldname) {
          depfield = fieldFromDescribe;
        }
      }
          
      ctrlselect = document.getElementById(ctrlName);
      ctrlselect.size = ctrlselect.options.length > 1 ? ctrlselect.options.length : 2;             
      var ctrlVal = ctrlselect.options[ctrlselect.selectedIndex].value;
      
      //finding the controller field selected value index
      var ctrlIdx = 0;
      for (var i = 0; i < ctrlfield.picklistValues.length; i++) {               
        if (ctrlfield.picklistValues[i].value == ctrlVal) {
          ctrlIdx = i;
          break;    
        }
      }
      
      depselect = document.getElementById(depName);
      var depVal = (depselect && depselect.options.length > 0 && depselect.selectedIndex >= 0) ? depselect.options[depselect.selectedIndex].value : '';
      
      var count = 0;
      if (depselect){        
          depselect.options.length = 0;
          if (ctrlIdx == undefined) {
            depselect.size = 2;
            depselect.selectedIndex = 0;
            return;
          }
            
          for (var i=0; i<depfield.picklistValues.length; i++) {
            try {
              var ple = depfield.picklistValues[i];
              var val = ple.validFor;
              if (val == null) {
                continue;
              }
              
              var vf = decode(val);          
              var bits = vf.charCodeAt(ctrlIdx >> 3);
              if ((bits & (0x80 >> ctrlIdx % 8)) != 0) {
                depselect.options[depselect.options.length] = new Option(depfield.picklistValues[i].label, depfield.picklistValues[i].value);
                depselect.disabled = false;
                if (depfield.picklistValues[i].value == depVal) {
                  depselect.selectedIndex = depselect.options.length - 1;
                }
                count++;
              }
            } catch (e) {alert(e.message);}
          }
          if (count == 1){
            depselect.size = 2;
          } else if (count > 0){
            depselect.size = count;
          }       
          if (depselect.selectedIndex == -1){
            depselect.selectedIndex = 0;
          }
        }
    }

    function decode(input) {
      var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      var output = [];
      var chr1, chr2, chr3 = "";
      var enc1, enc2, enc3, enc4 = "";
      var i = 0;
      var base64test = /[^A-Za-z0-9\+\/\=]/g;
      if (base64test.exec(input)) {
        alert("There were invalid base64 characters in the input text.\n" + "Valid base64 characters are A-Z, a-z, 0-9, '+', '/', and '='\n" + "Expect errors in decoding.");
      }
      input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
      do {
        enc1 = keyStr.indexOf(input.charAt(i++));
        enc2 = keyStr.indexOf(input.charAt(i++));
        enc3 = keyStr.indexOf(input.charAt(i++));
        enc4 = keyStr.indexOf(input.charAt(i++));
        chr1 = (enc1 << 2) | (enc2 >> 4);
        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
        chr3 = ((enc3 & 3) << 6) | enc4;
        output.push(String.fromCharCode(chr1));
        if (enc3 != 64) {
          output.push(String.fromCharCode(chr2));
        }
        if (enc4 != 64) {
          output.push(String.fromCharCode(chr3));
        }
        chr1 = chr2 = chr3 = "";
        enc1 = enc2 = enc3 = enc4 = "";
      } while (i < input.length);
      return output.join("");
    }
    
    function onChangeHenvendelsetype(){
      populateDependentPicklist('CTI_CallRegistration__c', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelsetype}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelse}', 'Henvendelsetype__c', 'Henvendelse__c');      
      populateDependentPicklist('CTI_CallRegistration__c', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelsetype}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_udstyr}', 'Henvendelsetype__c', 'Udstyr__c', true);
      populateDependentPicklist('CTI_CallRegistration__c', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelsetype}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_kundeforhold}', 'Henvendelsetype__c', 'Kundeforhold__c', true);
      onChangePicklictVisibility('{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelsetype_label}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelsetype}');      
      onChangeHenvendelse();      
      onChangePicklictVisibility('{!$Component.frm.id_taksonomy.id_taxonomysection.id_kundeforhold_label}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_kundeforhold}');
      onChangePicklictVisibility('{!$Component.frm.id_taksonomy.id_taxonomysection.id_udstyr_label}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_udstyr}');
      return 0;
    }
    
    function onChangeHenvendelse(){
      populateDependentPicklist('CTI_CallRegistration__c', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelse}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_losning}', 'Henvendelse__c', 'Losning__c');
      onChangePicklictVisibility('{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelse_label}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_henvendelse}');
      onChangePicklictVisibility('{!$Component.frm.id_taksonomy.id_taxonomysection.id_losning_label}', '{!$Component.frm.id_taksonomy.id_taxonomysection.id_losning}');
      return 0;
    }
    
    function onChangePicklictVisibility(labelName, picklistName){
      ctrlselectLabel = document.getElementById(labelName);
      ctrlselect = document.getElementById(picklistName);
      if (ctrlselectLabel && ctrlselect){
        var displayStyle = (ctrlselect.options.length == 0) ? 'none' : 'inline';
        ctrlselectLabel.style.display = displayStyle;
        ctrlselect.style.display = displayStyle;
        var displayBlockStyle = (ctrlselect.options.length == 0) ? 'none' : 'table-cell';
        var parentElement = ctrlselectLabel.parentNode;
        parentElement.style.display = displayBlockStyle;
      }      
    }
    
    function onCTICompleted(callCTI) {
        var stopStatus = this.document.getElementById('{!$Component.frm.id_taksonomy.id_commandButtons.id_saveCallRegistration}.stop');
        var boolStopStatus = stopStatus.innerHTML == '1';
        if (boolStopStatus) {
            cancelCallRegistration = false;            
            CTI_onClosePopup(callCTI);
        }      
    }    
    
     function hasFormRequiredFields() {
        var commentValue = document.getElementById('{!$Component.frm.id_taksonomy.id_general.id_comment}').value;
        if (commentValue == null || commentValue == '')
            return false;
        else
            return true;
     }
     
     function clearAccount() {
        document.getElementById('{!$Component.frm.id_taksonomy.id_general.id_accuont}').value = '';
     }      
  </script>
  </apex:form>
</apex:page>